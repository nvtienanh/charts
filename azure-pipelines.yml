# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
    name: test
jobs:
- job: no_checkout
  
  container:
    image: nvtienanh/cmake:5.0
    volumes:
      - /nfsdata:/nfsdata
      - /conan:/conan
  # variables:
  #   # CCACHE_DIR: /nfsdata
  #   CONAN_USER_HOME: /conan

    # CCACHE_HARDLINK: true
  steps:
  - task: Cache@2
    displayName: Conan caching
    inputs:
      key: 'v2 | conan | "$(Agent.OS)" | conanfile.py'
      path: /conan
      restoreKeys: | 
        v2 | conan | "$(Agent.OS)"
      cacheHitVar: CONAN_CACHE_RESTORED

  - task: Cache@2
    displayName: Ccache caching
    inputs:
      key: 'ccache | "$(Agent.OS)" | $(Build.SourceVersion)'
      path: /nfsdata
      restoreKeys: | 
        ccache | "$(Agent.OS)"
      cacheHitVar: CCACHE_RESTORED

  - script: |
      tar -xzf /conan/conan-data.tar.gz -C /
    displayName: Conan cache restore
    condition: and(not(canceled()), eq(variables.CONAN_CACHE_RESTORED, 'true'))

  - script: |
      df -h
      whoami
      echo $UID
      conan profile new default --detect
      conan profile update settings.compiler.libcxx=libstdc++11 default
      conan config get storage.path
      echo $(System.DefaultWorkingDirectory)/.conan/data
      conan install . --output-folder=build --build=missing
      
      # # cmake -B build -G Ninja
      cmake -B build -G Ninja
      cmake --build ./build
    displayName: 'Run cmake'
    env:
      CCACHE_DIR: /nfsdata

  - script: |
      ccache -s
    displayName: 'Run ccache -s'
    env:
      CCACHE_DIR: /nfsdata
  
  - script: |
      mkdir -p temp
      tar -czf temp/conan-data.tar.gz $(System.DefaultWorkingDirectory)/.conan/data
      cp temp/conan-data.tar.gz /conan/
    displayName: Pack conan cache
    condition: and(not(canceled()), not(failed()), ne(variables.CONAN_CACHE_RESTORED, 'true'))


# https://github.com/microsoft/azure-pipelines-tasks/issues/10925
# - job: checkout
#   dependsOn: no_checkout

#   container:
#     image: nvtienanh/cmake:5.0
#     volumes:
#       - /temcache:/temcache
#       - /blobfuse2:/blobfuse2
#   steps:
#   - checkout: none
#   - script: |
#       ls -la /temcache
#       azcopy --version
#   condition: always()
#   displayName: 'Run cmake'


